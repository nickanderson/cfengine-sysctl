bundle agent kernel_settings_sysctl_conf
# @brief Manage individual settings in /etc/sysctl.conf and reload sysctl on repair
{
  vars:
    linux::
      # I don't think there is great value in adding the additional complexity
      # of allowing the user to specify tis.
      "_conf_file"
        string => "/etc/sysctl.conf",
        unless => isvariable( "_conf_file" );

      "_desired_conf_data_variable"
        string => "$(this.namespace).$(this.bundle)._desired_conf_data",
        unless => isvariable( "_desired_conf_data_variable" );

      "_desired_conf_data"
        data => '{ "vm.swappiness": "10"
        }',
        unless => isvariable( "_desired_conf_data" );

  classes:
    linux::
      # We want to know if we are editing the main sysctl.conf so that
      # we know if we should attempt to reload the settings if it has
      # been repaired. This is simply a protection in case we later decide to
      # allow the sysctl config file to be tunable.
      "using_default__conf_file"
        expression => strcmp($(_conf_file), "/etc/sysctl.conf");

  files:
    linux::
      # We want to keep the permissions tight, if different permissions are appropriate please cite the source.
      "$(_conf_file)"
        perms => mog("400", "root", "root"),
        comment => "According to http://www.stigviewer.com/stig/red_hat_enterprise_linux_5/2014-07-07/finding/V-4336
                    /etc/sysctl.conf should have permissions less than 600.";

      "$(_conf_file)"
        create => "true",
        edit_line => set_line_based("$(_desired_conf_data_variable)", "=", "\s*=\s*", ".*", "\s*#\s*"),
        classes => scoped_classes_generic("bundle", "_conf_file"),
        comment =>  "sysctl settings can be very important to the performance of systems and applications";

  commands:
    linux._conf_file_repaired::
      # Reload sysctl settings if they have been modified
      "$(paths.sysctl)"
        args => "-p $(_conf_file)",
        handle => "$(this.bundle)_sysctl_reload_after_repair",
        comment => "After $(_conf_file) has been modified, sysctl must reload it for settings to apply.",
        ifvarclass => "using_default__conf_file";

}
